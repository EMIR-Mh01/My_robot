<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_robot">

  <!-- Include Xacro files -->
  <xacro:include filename="inertial_macros.xacro"/>
  <xacro:include filename="lidar.xacro"/>
  <xacro:include filename="camera.xacro"/>
  <xacro:arg name="sim_mode" default="true"/>

  <!-- Properties -->
  <xacro:property name="chassis_length" value="0.335"/>
  <xacro:property name="chassis_width" value="0.265"/>
  <xacro:property name="chassis_height" value="0.138"/>
  <xacro:property name="chassis_mass" value="1.0"/>
  <xacro:property name="wheel_radius" value="0.033"/>
  <xacro:property name="wheel_thickness" value="0.026"/>
  <xacro:property name="wheel_mass" value="0.05"/>
  <xacro:property name="wheel_offset_x" value="0.226"/>
  <xacro:property name="wheel_offset_y" value="0.1485"/>
  <xacro:property name="wheel_offset_z" value="0.01"/>
  <xacro:property name="caster_wheel_radius" value="0.01"/>
  <xacro:property name="caster_wheel_mass" value="0.01"/>
  <xacro:property name="caster_wheel_offset_x" value="0.075"/>
  <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>

  <!-- Materials -->
  <material name="white"><color rgba="1 1 1 1"/></material>
  <material name="orange"><color rgba="1 0.3 0.1 1"/></material>
  <material name="blue"><color rgba="0.2 0.2 1 1"/></material>
  <material name="gray"><color rgba="0.5 0.5 0.5 1"/></material>
  <material name="black"><color rgba="0 0 0 1"/></material>

  <!-- Links -->
  <link name="base_link"/>

  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="base_footprint"/>

  <!-- Chassis -->
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
  </joint>

  <link name="chassis">
    <visual>
      <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
      <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- Wheels (rear_left, rear_right, front_left, front_right) -->
  <xacro:macro name="wheel" params="name xyz rpy axis">
    <joint name="${name}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}"/>
      <origin xyz="${xyz}" rpy="${rpy}"/>
      <axis xyz="${axis}"/>
    </joint>
    <link name="${name}">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="gray"/>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
      </collision>
      <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_cylinder>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/Gray</material>
    </gazebo>
  </xacro:macro>

  <!-- Rear Wheels (Now front) -->
  <xacro:wheel name="front_left_wheel" xyz="${-0.15} ${wheel_offset_y} 0" rpy="-1.5708 0 0" axis="0 0 1"/>
  <xacro:wheel name="front_right_wheel" xyz="${-0.15} ${-wheel_offset_y} 0" rpy="1.5708 0 0" axis="0 0 -1"/>

  <!-- Front Wheels (Now back) -->
  <xacro:wheel name="rear_left_wheel" xyz="0 ${wheel_offset_y} 0" rpy="-1.5708 0 0" axis="0 0 1"/>
  <xacro:wheel name="rear_right_wheel" xyz="0 ${-wheel_offset_y} 0" rpy="1.5708 0 0" axis="0 0 -1"/>

  <!-- Caster Wheel -->
  <joint name="caster_wheel_joint" type="fixed">
    <parent link="chassis"/>
    <child link="caster_wheel"/>
    <origin xyz="${caster_wheel_offset_x} 0 ${caster_wheel_offset_z}"/>
  </joint>

  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
    </collision>
    <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link>

  <gazebo reference="caster_wheel">
    <material>Gazebo/White</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

  <!-- Gazebo Plugin -->
  <gazebo>
    <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>
      </ros>
      <left_joint>rear_left_wheel_joint</left_joint>
      <right_joint>rear_right_wheel_joint</right_joint>
      <wheel_separation>${wheel_offset_y * 2}</wheel_separation>
      <wheel_diameter>${wheel_radius * 2}</wheel_diameter>
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
    </plugin>
  </gazebo>

</robot>

